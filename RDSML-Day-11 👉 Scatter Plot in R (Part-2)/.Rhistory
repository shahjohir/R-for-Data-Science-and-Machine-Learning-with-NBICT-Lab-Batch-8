data(mtcars)
logit_model <- glm(am ~ wt + hp,
data = mtcars,
family = binomial(link = "logit"))
summary(logit_model)
View(logit_model)
View(logit_model)
predicted_probabilities <- predict(logit_model, type = "response")
predicted_classes <- ifelse(predicted_probabilities > 0.5, 1, 0)
confusion_matrix <- table(Predicted = predicted_classes, Actual = mtcars$am)
print("Confusion Matrix:")
print(confusion_matrix)
View(logit_model)
reticulate::repl_python()
library(psych)
psych::describe(data)
describe(data)
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
RCBD <- read_excel("C:/Users/USER/Desktop/RCBD.csv")
setwd("E:/Kumu and Traninng/TRAININGS/R Training/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-11 ðŸ‘‰ Scatter Plot in R (Part-2)")
# Loading a dataset
dataset = mtcars
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Installing and loading ggplot2
# install.packages("ggplot2")
library(ggplot2)
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Changing the point shape and size
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 10)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 10) +
geom_smooth()
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 10) +
geom_smooth(method = 1m)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 10) +
geom_smooth(method = lm)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm)
# Removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth(method = lm, se = FALSE)
# Loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth()
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm)
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm, linetype = "dashed")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkblue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm, linetype = "doted",
color = "darkblue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm, linetype = "dotted",
color = "darkblue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkblue", fill = "blue")
View(dataset)
View(dataset)
# Changing the point shapes by the levels of cyl
dataset$cyl
class(dataset$cyl)
# Changing the point shapes by the levels of cyl
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
# Changing the point shapes and colors
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, colour = cyl)) +
geom_point()
# Changing the point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, colour = cyl, size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, colour = cyl, size = cyl)) +
geom_point()
# Changing the point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, colour = cyl, size = cyl)) +
geom_point()
