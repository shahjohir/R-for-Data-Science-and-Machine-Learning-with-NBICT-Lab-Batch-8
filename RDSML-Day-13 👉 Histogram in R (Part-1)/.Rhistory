data(mtcars)
logit_model <- glm(am ~ wt + hp,
data = mtcars,
family = binomial(link = "logit"))
summary(logit_model)
View(logit_model)
View(logit_model)
predicted_probabilities <- predict(logit_model, type = "response")
predicted_classes <- ifelse(predicted_probabilities > 0.5, 1, 0)
confusion_matrix <- table(Predicted = predicted_classes, Actual = mtcars$am)
print("Confusion Matrix:")
print(confusion_matrix)
View(logit_model)
reticulate::repl_python()
library(psych)
psych::describe(data)
describe(data)
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
RCBD <- read_excel("C:/Users/USER/Desktop/RCBD.csv")
setwd("E:/Kumu and Traninng/TRAININGS/R Training/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-13 ðŸ‘‰ Histogram in R (Part-1)")
setwd("E:/Kumu and Traninng/TRAININGS/R Training/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-13 ðŸ‘‰ Histogram in R (Part-1)")
# Importing the Dataset
dataset = read.csv(data.csv)
# Importing the Dataset
dataset = read.csv(data.csv)
# Importing the Dataset
dataset= read.csv(data.csv)
# Importing the Dataset
dataset = read.csv("data.csv")
# Importing the library
library(ggplot2)
# Basic histogram using ggplot2
ggplot()
# Basic histogram using ggplot2
ggplot(dataset, aes())
# Basic histogram using ggplot2
ggplot(dataset, aes(x = weight))
# Basic histogram using ggplot2
ggplot(dataset, aes(x = weight))+
geom_histogram()
# Changing the width of bins
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 2)
# Changing the width of bins
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 1)
# Changing the width of bins
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 2)
# Changing the width of bins
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 2, color = "black")
# Changing the width of bins
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 1, color = "black")
# Changing the colors
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 1, color = "black", fill= "white")
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 1, color = "black", fill= "blue")
ggplot(dataset, aes(x = weight))+
geom_histogram(binwidth = 1, color = "black", fill= "lightblue")
# Adding the mean line
myplot = ggplot(dataset, aes(x = weight))+
geom_histogram(color = "black", fill= "lightblue")
myplot
myplot + geom_vline(aes(xintercept= mean(weight)),
color = "blue")
myplot + geom_vline(aes(xintercept= mean(weight)),
color = "blue", linetype ="dashed", size = 1)
# Histogram with density plot
ggplot(dataset, aes(x = weight))+
geom_histogram(aes(y = after_stat(density)), color = "black", fill= "white")+
geom_density()
# Histogram with density plot
ggplot(dataset, aes(x = weight))+
geom_histogram(aes(y = after_stat(density)), color = "black", fill= "white")+
geom_density(fill = "blue")
# Histogram with density plot
ggplot(dataset, aes(x = weight))+
geom_histogram(aes(y = after_stat(density)), color = "black", fill= "white")+
geom_density(fill = "blue", alpha = .2)
# Histogram with density plot
ggplot(dataset, aes(x = weight))+
geom_histogram(aes(y = after_stat(density)), color = "black", fill= "white")+
geom_density(fill = "blue", alpha = .1)
# Histogram with density plot
ggplot(dataset, aes(x = weight))+
geom_histogram(aes(y = after_stat(density)), color = "black", fill= "white")+
geom_density(fill = "blue", alpha = .2)
# Histogram with density plot
ggplot(dataset, aes(x = weight))+
geom_histogram(aes(y = after_stat(density)), color = "black", fill= "white")+
geom_density(fill = "blue", alpha = .3)
# Histogram with density plot
ggplot(dataset, aes(x = weight))+
geom_histogram(aes(y = after_stat(density)), color = "black", fill= "white")+
geom_density(fill = "blue", alpha = .2)
