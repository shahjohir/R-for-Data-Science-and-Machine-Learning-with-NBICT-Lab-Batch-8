data(mtcars)
logit_model <- glm(am ~ wt + hp,
data = mtcars,
family = binomial(link = "logit"))
summary(logit_model)
View(logit_model)
View(logit_model)
predicted_probabilities <- predict(logit_model, type = "response")
predicted_classes <- ifelse(predicted_probabilities > 0.5, 1, 0)
confusion_matrix <- table(Predicted = predicted_classes, Actual = mtcars$am)
print("Confusion Matrix:")
print(confusion_matrix)
View(logit_model)
reticulate::repl_python()
library(psych)
psych::describe(data)
describe(data)
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
RCBD <- read_excel("C:/Users/USER/Desktop/RCBD.csv")
install.packages("tydiverse")
library(tydiverse)
library("tydiverse")
install.packages("tydiverse")
install.packages("MatchIt")
library(MatchIt)
detach("package:MatchIt", unload = TRUE)
install.packages("WeightIt")
install.packages("WeightIt")
install.packages("WeightIt")
library(WeightIt)
detach("package:WeightIt", unload = TRUE)
install.packages("tidyverse")
install.packages("Matching")
setwd("E:/Kumu and Traninng/TRAININGS/R Training/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-Batch-8/RDSML-Day-19 ðŸ‘‰ Box and Whisker Plot in R")
# Loading the dataset
myData = ToothGrowth
view(myData)
view(myData)
View(myData)
myData$dose = as.factor(myData$dose)
library(ggplot2)
# Basic box plot
ggplot(myData, aes(x= dose, y= len)) +
geom_boxplot()
# Rotating the box plot
ggplot(myData, aes(x= dose, y= len)) +
geom_boxplot()+
coord_flip()
# Notched box plot
ggplot(myData, aes(x= dose, y= len)) +
geom_boxplot(notch = T)
# Changing outlier, color, shape, and size
ggplot(myData, aes(x= dose, y= len)) +
geom_boxplot(outlier.color = "red")
ggplot(myData, aes(x= dose, y= len)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8, outlier.size = 3)
ggplot(myData, aes(x= dose, y= len)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8, outlier.size = 3)+
scale_x_discrete(limits =c("2"))
# Changing box plot line colors by groups
ggplot(myData, aes(x= dose, y= len, colour = dose)) +
geom_boxplot()
# Changing the item order
ggplot(myData, aes(x= dose, y= len, colour = dose)) +
geom_boxplot()+
scale_x_discrete(limit = c("2", "0.5", "1"))
# Box plot with multiple groups
ggplot(myData, aes(x= dose, y= len, colour = dose, fill = supp)) +
geom_boxplot()
# Changing the box position
ggplot(myData, aes(x= dose, y= len, colour = dose, fill = supp)) +
geom_boxplot(position = position_dodge(1))
# Changing the box position
ggplot(myData, aes(x= dose, y= len, colour = dose, fill = supp)) +
geom_boxplot(position = position_dodge(2))
# Changing the box position
ggplot(myData, aes(x= dose, y= len, colour = dose, fill = supp)) +
geom_boxplot(position = position_dodge(1))
